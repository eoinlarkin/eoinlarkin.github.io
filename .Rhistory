plot2 <-  ggplot(as.data.frame(x.samps), aes(x=x.samps)) +
geom_histogram(aes(y =..density..), binwidth=0.025, colour="black", fill="skyblue", alpha=0.25)+
geom_area(stat='function', fun=dbeta, args=list(shape1=2.5,shape2=4.5), color='darkgreen', fill='darkgreen', alpha=0.15) +
##scale_colour_manual("Legend", values = c("black", "darkred")) +
labs(title="Plot of Simulated (Blue) and Theoretical (Red) Distributions",
x = "X Values")
grid.arrange(plot1, plot2, ncol=2)
x.output <- metropolis.hastings.beta(0.1, 1e4, 2.5, 4.5)
x.samps <- x.output$output
x.samps <- tibble(iter = 1:length(x.samps),
x.samps = x.samps)
plot1 <-  ggplot(x.samps, aes(x=iter, y=x.samps)) +
geom_line(color="red", alpha=0.5)
plot2 <-  ggplot(as.data.frame(x.samps), aes(x=x.samps)) +
geom_histogram(aes(y =..density..), binwidth=0.025, colour="black", fill="skyblue", alpha=0.25)+
geom_area(stat='function', fun=dbeta, args=list(shape1=2.5,shape2=4.5), color='darkyellow', fill='darkyellow', alpha=0.15) +
##scale_colour_manual("Legend", values = c("black", "darkred")) +
labs(title="Plot of Simulated (Blue) and Theoretical (Red) Distributions",
x = "X Values")
grid.arrange(plot1, plot2, ncol=2)
x.output <- metropolis.hastings.beta(0.1, 1e4, 2.5, 4.5)
x.samps <- x.output$output
x.samps <- tibble(iter = 1:length(x.samps),
x.samps = x.samps)
plot1 <-  ggplot(x.samps, aes(x=iter, y=x.samps)) +
geom_line(color="red", alpha=0.5)
plot2 <-  ggplot(as.data.frame(x.samps), aes(x=x.samps)) +
geom_histogram(aes(y =..density..), binwidth=0.025, colour="black", fill="skyblue", alpha=0.25)+
geom_area(stat='function', fun=dbeta, args=list(shape1=2.5,shape2=4.5), color='yellow', fill='yellow', alpha=0.15) +
##scale_colour_manual("Legend", values = c("black", "darkred")) +
labs(title="Plot of Simulated (Blue) and Theoretical (Red) Distributions",
x = "X Values")
grid.arrange(plot1, plot2, ncol=2)
plot1 <-  ggplot(samples, aes(x=lambda)) +
geom_histogram(aes(y =..density..), binwidth=0.1, colour="black", fill="skyblue", alpha=0.25)+
labs(title="Histogram of Lambda")
plot2 <-  ggplot(samples, aes(x=z)) +
geom_histogram(aes(y =..density..), binwidth=1, colour="black", fill="skyblue", alpha=0.25)+
labs(title="Histogram of Z")
grid.arrange(plot1, plot2, ncol=2)
# Trace plots
plot3 <-  ggplot(x.samps, aes(x=iter, y=lambda)) +
geom_line(color="red", alpha=0.5)
plot4 <-  ggplot(x.samps, aes(x=iter, y=z)) +
geom_line(color="red", alpha=0.5)
grid.arrange(plot3, plot4, ncol=2)
gibbs_gen <- function(n, posterior, Z, initial_z, initial_lambda)
{
# z.0: initial value of z
# lambda.o: initial value of lambda
# n: number of simulations
# posterior: function for the posterior distribution
# z: function for the number of
z.o <- initial_z
lambda.o <- 1/initial_lambda
for(j in 2:n){
z <- Z(1)
lambda <- posterior(1, z)
z.o <- c(z.o, z)
lambda.o <- c(lambda.o, lambda)
}
out <- tibble(iter=1:n,
z = z.o,
lambda = lambda.o)
return(out)
}
samples <- gibbs_gen(n <- 1e4,
posterior = posterior,
Z = Z,
initial_z = ceiling(z_p * 18),
initial_lambda = lambda_prior)
plot1 <-  ggplot(samples, aes(x=lambda)) +
geom_histogram(aes(y =..density..), binwidth=0.1, colour="black", fill="skyblue", alpha=0.25)+
labs(title="Histogram of Lambda")
plot2 <-  ggplot(samples, aes(x=z)) +
geom_histogram(aes(y =..density..), binwidth=1, colour="black", fill="skyblue", alpha=0.25)+
labs(title="Histogram of Z")
grid.arrange(plot1, plot2, ncol=2)
# Trace plots
plot3 <-  ggplot(x.samps, aes(x=iter, y=lambda)) +
geom_line(color="red", alpha=0.5)
plot4 <-  ggplot(x.samps, aes(x=iter, y=z)) +
geom_line(color="red", alpha=0.5)
grid.arrange(plot3, plot4, ncol=2)
plot1 <-  ggplot(samples, aes(x=lambda)) +
geom_histogram(aes(y =..density..), binwidth=0.1, colour="black", fill="skyblue", alpha=0.25)+
labs(title="Histogram of Lambda")
plot2 <-  ggplot(samples, aes(x=z)) +
geom_histogram(aes(y =..density..), binwidth=1, colour="black", fill="skyblue", alpha=0.25)+
labs(title="Histogram of Z")
grid.arrange(plot1, plot2, ncol=2)
# Trace plots
plot3 <-  ggplot(samples, aes(x=iter, y=lambda)) +
geom_line(color="red", alpha=0.5)
plot4 <-  ggplot(samples, aes(x=iter, y=z)) +
geom_line(color="red", alpha=0.5)
grid.arrange(plot3, plot4, ncol=2)
sum_output <- function(x){
prob <- length(x[x > 2]) / length(x)
x_vals <- x[x > 2]
s <- sqrt(var(x_vals))
ci_upper <- prob + 1.96 * (s/sqrt(length(x)))
ci_lower <- prob - 1.96 * (s/sqrt(length(x)))
ci_interval <- c(ci_lower, ci_upper)
out <- list(prob, s, ci_interval)
return(out)
}
x1_summary <- sum_output(x_samps_1$output)
x2_summary <- sum_output(x_samps_2$output)
x3_summary <- sum_output(x_samps_3$output)
# Defining our posterior:
z <- Z(1)
alpha = 1
beta = lambda_prior
sum_xi = function(z) {0*z + 1*(18-Z(1)) + 2*13 + 3*8 + 4*3 + 5*4 + 6*3 + 10*1}
m = 50
posterior <- function(n, z) rgamma(n=n, shape=alpha+sum_xi(z), rate=(beta+m))
gibbs_gen <- function(n, posterior, Z, initial_z, initial_lambda)
{
# z.0: initial value of z
# lambda.o: initial value of lambda
# n: number of simulations
# posterior: function for the posterior distribution
# z: function for the number of
z.o <- initial_z
lambda.o <- 1/initial_lambda
for(j in 2:n){
z <- Z(1)
lambda <- posterior(1, z)
z.o <- c(z.o, z)
lambda.o <- c(lambda.o, lambda)
}
out <- tibble(iter=1:n,
z = z.o,
lambda = lambda.o)
return(out)
}
--version
r --version
R --version
R.version()
R.Version()
devtools::install_github("marcusvolz/strava")
devtools::install_github("marcusvolz/strava")
devtools::install_github("marcusvolz/strava")
install.packages(c("backports", "broom", "cli", "ggplot2", "isoband", "jsonlite", "nimble", "pillar", "processx", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
install.packages(c("backports", "broom", "cli", "ggplot2", "isoband", "jsonlite", "nimble", "pillar", "processx", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
install.packages(c("backports", "broom", "cli", "ggplot2", "isoband", "jsonlite", "nimble", "pillar", "processx", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
install.packages(c("backports", "broom", "cli", "ggplot2", "isoband", "jsonlite", "nimble", "pillar", "processx", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
install.packages(c("backports", "broom", "cli", "ggplot2", "isoband", "jsonlite", "nimble", "pillar", "processx", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(strava) # loading the Strava package
data <- process_data(path) # loading the activities
# Installing the strava package
# devtools::install_github("marcusvolz/strava")
# Setting the path for the activities file
path <- "C:\\Users\\Eoin\\OneDrive\\Data Science\\Projects\\2020.12 - Strava Visualisation\\strava_activities_converted\\"
library(strava) # loading the Strava package
data <- process_data(path) # loading the activities
p1 <- plot_facets(data)
ggsave("facets001.png", p1, width = 5, height = 5, units = "cm")
p1
p_test <- data %>%
top_n(n=28787) %>%
plot_facets()
p_test
head(data)
p_test <- data %>%
filter(id=1:25) %>%
plot_facets()
p_test <- data %>%
filter(id==1:25) %>%
plot_facets()
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets()
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = (0,0,0,0))
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0,0,0,0))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0.1,0.1,0.1,0.1))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0.1,0.1,0.1,0.1, "cm"))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(1,1,1,1, "cm"))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0.2,0.2,0.2,0.2, "cm"))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0.5,0.5,0.5,0.5, "cm"))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0.5,0.5,0.5,0.5, "cm"))
p_test
p_test <- data %>%
filter(id==1:50) %>%
plot_facets() + theme(plot.margin = margin(0.5,0.5,0.5,0.5, "cm"))
p_test
p1 <- plot_facets(data) +
theme(plot.margin = margin(0.5,0.5,0.5,0.5, "cm"))
ggsave("facets001.png", p1, width = 5, height = 5, units = "cm")
p1
p1 <- plot_facets(data) +
theme(plot.margin = margin(0.5,0.5,0.5,0.5, "cm"))
ggsave("facets001.png", p1, width = 5, height = 5, units = "cm", dpi=1200)
p1
p1 <- plot_facets(data) +
theme(plot.margin = margin(0.5,0.5,0.5,0.5, "cm"))
ggsave("facets001.png", p1, width = 10, height = 10, units = "cm", dpi=1200)
p1
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.41, 14.16, 45.53, 45.9),
galway=c(-8.55, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.title = element_text(color = "tomato", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Trieste",
subtitle = "Running, cycling & hiking activities from Strava")
ggsave("map_trieste1005.png", p2, width = 10, height = 5, units = "cm", dpi = 1200)
ggsave("map_trieste1010.png", p2, width = 10, height = 10, units = "cm", dpi = 1200)
ggsave("map_trieste.png", p2)
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.title = element_text(color = "tomato", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Dublin",
subtitle = "Running, cycling & hiking activities from Strava")
ggsave("map_dublin1010.png", p3, width = 10, height = 10, units = "cm", dpi = 1200)
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.title = element_text(color = "tomato", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Galway",
subtitle = "Running, cycling & hiking activities from Strava")
ggsave("map_galway1010.png", p4, width = 10, height = 10, units = "cm", dpi = 1200)
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.41, 14.16, 45.53, 45.9),
galway=c(-8.55, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm"))
#theme(plot.title = element_text(color = "tomato", size = 12, face = "bold"),
#                      plot.subtitle = element_text(color = "gray40", size=3)) +
#                labs(title = "Trieste",
#                     subtitle = "Running, cycling & hiking activities from Strava")
ggsave("map_trieste1005.png", p2, width = 10, height = 5, units = "cm", dpi = 1200)
ggsave("map_trieste1010.png", p2, width = 10, height = 10, units = "cm", dpi = 1200)
ggsave("map_trieste.png", p2)
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.title = element_text(color = "tomato", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Dublin",
subtitle = "Running, cycling & hiking activities from Strava")
ggsave("map_dublin1010.png", p3, width = 10, height = 10, units = "cm", dpi = 1200)
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.title = element_text(color = "tomato", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Galway",
subtitle = "Running, cycling & hiking activities from Strava")
ggsave("map_galway1010.png", p4, width = 10, height = 10, units = "cm", dpi = 1200)
# Defining our list of locations
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.41, 14.16, 45.53, 45.9),
galway=c(-8.55, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Trieste")
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Dublin")
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 12, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Galway")
# Saving the plot output
ggsave("map_trieste.png", p2)
ggsave("map_dublin.png", p3)
ggsave("map_galway.png", p4)
# Defining our list of locations
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.42, 14.16, 45.53, 45.9),
galway=c(-8.56, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Trieste")
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Dublin")
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
labs(title = "Galway")
# Saving the plot output
ggsave("map_trieste.png", p2)
ggsave("map_dublin.png", p3)
ggsave("map_galway.png", p4)
# Defining our list of locations
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.42, 14.28, 45.47, 45.9),
galway=c(-8.56, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
panel.border = element_rect(colour = "gray40", fill=NA, size=1) +
labs(title = "Trieste")
# Defining our list of locations
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.42, 14.28, 45.47, 45.9),
galway=c(-8.56, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Trieste")
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=2)) +
labs(title = "Dublin")
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=3)) +
labs(title = "Galway")
# Saving the plot output
ggsave("map_trieste.png", p2)
ggsave("map_dublin.png", p3)
ggsave("map_galway.png", p4)
install.packages("patchwork")
library(patchwork)
# Defining our list of locations
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.42, 14.28, 45.47, 45.9),
galway=c(-8.56, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Trieste")
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Dublin")
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Galway")
# Saving the plot output
plot_merge <- (p2 / p3 / p4)
plot_merge
ggsave("map_merge.png", plot_merge)
#ggsave("map_trieste.png", p2)
#ggsave("map_dublin.png", p3)
#ggsave("map_galway.png", p4)
(p2 /p3 / p4) +
plot_layout(widths = c(10), heights = c(10, 10, 10))
png("test.png", width=10, height=30)
(p2 /p3 / p4)
dev.off()
ggsave("map_merge.png", plot_merge, width = 10, height = 30, units = "cm",)
#ggsave("map_merge1.png", plot_merge, width = 10, height = 30, units = "cm",)
ggsave("map_merge2.png", plot_merge, width = 10, height = 28, units = "cm",)
ggsave("map_merge3.png", plot_merge, width = 10, height = 25, units = "cm",)
# Defining our list of locations
loc <- list(dublin=c(-6.86, -6.00, 53.03, 53.46),
trieste=c(13.42, 14.28, 45.47, 45.9),
galway=c(-8.56, -9.78, 52.85, 53.46))
# Trieste
p2 <- plot_map(data, lon_min = loc$trieste[1], lon_max = loc$trieste[2], lat_min = loc$trieste[3], lat_max = loc$trieste[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Trieste")
# Dublin
p3 <- plot_map(data, lon_min = loc$dublin[1], lon_max = loc$dublin[2], lat_min = loc$dublin[3], lat_max = loc$dublin[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Dublin")
# Galway
p4 <- plot_map(data, lon_min = loc$galway[1], lon_max = loc$galway[2], lat_min = loc$galway[3], lat_max = loc$galway[4]) +
theme(plot.margin = margin(0.25,0.25,0.25,0.25, "cm")) +
theme(plot.title = element_text(color = "gray40", size = 16, face = "bold"),
plot.subtitle = element_text(color = "gray40", size=3)) +
theme(panel.border = element_rect(colour = "gray40", fill=NA, size=1)) +
labs(title = "Galway")
# Arranging the plots using the patchwork package
plot_merge <- (p2 / p3 / p4) # creates a merged stacked plot
plot_merge
# Saving the plot output
ggsave("map_merge.png", plot_merge, width = 10, height = 25, units = "cm",)
#ggsave("map_trieste.png", p2) # individually saving the plot
#ggsave("map_dublin.png", p3)  # individually saving the plot
#ggsave("map_galway.png", p4) # individually saving the plot
blogdown::build_site()
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
blogdown::build_site()
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
blogdown::serve_site()
blogdown:::update_meta_addin()
blogdown::hugo_build()
blogdown::build_site()
blogdown::hugo_build()
blogdown:::update_meta_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::hugo_build()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::preview_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown::stop_server()
library(blogdown)
build_site()
blogdown::stop_server()
build_site()
blogdown::stop_server()
blogdown::serve_site()
build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
serve_site()
blogdown:::new_post_addin()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::hugo_build()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::build_site(build_rmd = TRUE)
blogdown::hugo_build()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
