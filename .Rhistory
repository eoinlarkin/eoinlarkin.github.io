html_text(url2[4])
html_tag(url2[4])
html_name(url2[4])
html_attr(url2[4])
html_attr(url2[4], 'meta')
html_attrs(url2[4])
html_attr(url2[4], 'content')
url2 <- read_html("https://rip.ie/share.php?dn=442402") %>%
html_nodes('meta') %>%
html_attr('content')
url2
url2 <- read_html("https://rip.ie/share.php?dn=442402") %>%
html_nodes('meta') %>%
html_attrs()
url2
url2[4]
library(blogdown)
blogdown::install_hugo()
library(blogdown)
setwd("C:/Users/Eoin/OneDrive/Data Science/Github")
new_site(dir = 'eoinlarkin.github.io',
theme = 'yihui/hugo-xmin',
format = 'toml')
blogdown:::new_post_addin()
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
file.create('.nojekyll')
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
setwd("C:/Users/Eoin/OneDrive/Data Science/Github")
new_site(dir = 'eoinlarkin.github.io',
theme = 'olOwOlo/hugo-theme-even',
format = 'toml')
new_site(dir = 'eoinlarkin.github.io',
theme = 'olOwOlo/hugo-theme-even',
format = 'toml')
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
file.create('.nojekyll')
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
new_site(dir = 'eoinlarkin.github.io',
format = 'toml')
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::bundle_site()
blogdown::build_site()
blogdown::hugo_build()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::build_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::preview_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::preview_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::build_site()
blogdown::serve_site()
rm(list=ls())
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
blogdown:::new_post_addin()
account <- c('@bankofireland','@talktoboi','@aibireland', '@askaib')
acc.type <-c('Primary','Customer Support','Primary', 'Customer Support')
acc.foll <- c('39.3k','41.3k','30.9k', '43k')
acc.desc <- c('Official AIB Twitter profile. Primarily used to promote the Bank of Ireland                  brand on Twitter', 'Bank of Ireland’s Twitter customer support channel. Used to manage queries directed to Bank of Ireland customer support queries', 'Official AIB Twitter profile. Primarily used to promote the AIB brand on Twitter', 'Official AIB Support channel. Customer queries are directed to this twitter account and resolved by AIB’s dedicated Twitter customer care team')
df <- data.frame(acc, acc.type, acc.foll, acc.desc)
acc <- c('@bankofireland','@talktoboi','@aibireland', '@askaib')
acc.type <-c('Primary','Customer Support','Primary', 'Customer Support')
acc.foll <- c('39.3k','41.3k','30.9k', '43k')
acc.desc <- c('Official AIB Twitter profile. Primarily used to promote the Bank of Ireland                  brand on Twitter', 'Bank of Ireland’s Twitter customer support channel. Used to manage queries directed to Bank of Ireland customer support queries', 'Official AIB Twitter profile. Primarily used to promote the AIB brand on Twitter', 'Official AIB Support channel. Customer queries are directed to this twitter account and resolved by AIB’s dedicated Twitter customer care team')
df <- data.frame(acc, acc.type, acc.foll, acc.desc)
acc <- c('@bankofireland','@talktoboi','@aibireland', '@askaib')
acc.type <-c('Primary','Customer Support','Primary', 'Customer Support')
acc.foll <- c('39.3k','41.3k','30.9k', '43k')
acc.desc <- c('Official AIB Twitter profile. Primarily used to promote the Bank of Ireland                  brand on Twitter', 'Bank of Ireland’s Twitter customer support channel. Used to manage queries directed to Bank of Ireland customer support queries', 'Official AIB Twitter profile. Primarily used to promote the AIB brand on Twitter', 'Official AIB Support channel. Customer queries are directed to this twitter account and resolved by AIB’s dedicated Twitter customer care team')
df <- data.frame(acc, acc.type, acc.foll, acc.desc)
kable(df, caption='Summary of Twitter Accounts')
library(knitr)
acc <- c('@bankofireland','@talktoboi','@aibireland', '@askaib')
acc.type <-c('Primary','Customer Support','Primary', 'Customer Support')
acc.foll <- c('39.3k','41.3k','30.9k', '43k')
acc.desc <- c('Official AIB Twitter profile. Primarily used to promote the Bank of Ireland                  brand on Twitter', 'Bank of Ireland’s Twitter customer support channel. Used to manage queries directed to Bank of Ireland customer support queries', 'Official AIB Twitter profile. Primarily used to promote the AIB brand on Twitter', 'Official AIB Support channel. Customer queries are directed to this twitter account and resolved by AIB’s dedicated Twitter customer care team')
df <- data.frame(acc, acc.type, acc.foll, acc.desc)
kable(df, caption='Summary of Twitter Accounts')
acc <- c('@bankofireland','@talktoboi','@aibireland', '@askaib')
acc.type <-c('Primary','Customer Support','Primary', 'Customer Support')
acc.foll <- c('39.3k','41.3k','30.9k', '43k')
acc.desc <- c('Official AIB Twitter profile. Primarily used to promote the Bank of Ireland                  brand on Twitter', 'Bank of Ireland’s Twitter customer support channel. Used to manage queries directed to Bank of Ireland customer support queries', 'Official AIB Twitter profile. Primarily used to promote the AIB brand on Twitter', 'Official AIB Support channel. Customer queries are directed to this twitter account and resolved by AIB’s dedicated Twitter customer care team')
df <- data.frame(acc, acc.type, acc.foll, acc.desc)
kable(df, caption='Summary of Twitter Accounts')
acc <- c('@bankofireland','@talktoboi','@aibireland', '@askaib')
acc.type <-c('Primary','Customer Support','Primary', 'Customer Support')
acc.foll <- c('39.3k','41.3k','30.9k', '43k')
acc.desc <- c('Official AIB Twitter profile. Primarily used to promote the Bank of Ireland                  brand on Twitter', 'Bank of Ireland’s Twitter customer support channel. Used to manage queries directed to Bank of Ireland customer support queries', 'Official AIB Twitter profile. Primarily used to promote the AIB brand on Twitter', 'Official AIB Support channel. Customer queries are directed to this twitter account and resolved by AIB’s dedicated Twitter customer care team')
df <- data.frame(acc, acc.type, acc.foll, acc.desc)
kable(df, caption='Summary of Twitter Accounts')
knitr::opts_chunk$set(echo = TRUE)
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
rm(list=ls())     #clearing the R environment
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
library(httpuv)       # required for authentication
library(rtweet)       # loading rtweet library
install.packages('rtweet')
rm(list=ls())     #clearing the R environment
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
library(httpuv)       # required for authentication
library(rtweet)       # loading rtweet library
library(ggplot2)      # plotting
library(dplyr)        # pipes
library(tidytext)     # text mining library
install.packages('tidytext')
rm(list=ls())     #clearing the R environment
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
library(httpuv)       # required for authentication
library(rtweet)       # loading rtweet library
library(ggplot2)      # plotting
library(dplyr)        # pipes
library(tidytext)     # text mining library
library(lubridate)
# -------------------------------
# Setting up twitter
# -------------------------------
appname <- "api_test_explore"      # name of twitter app
key <- "re6VqRcF0SmXDlxPR4I1xeWwg"     # twitter api key
secret <- "WddFVgjpGGUvErcRJGcbaAkRi1D0a7J5VhG5I2uIftO9FcG6lM"   # api secret key
access_tok <- "1125852423287922689-nQN6HOeTpgkFZHzFDc3qVF8kxEJqiw"
access_sec <- "tk1IjdZGaC1VIGhdCmMyZoEPGgi6QnfcEd40GYReG9nrX"
# create token named "twitter_token"
token <- create_token(
app = appname,
consumer_key = key,
consumer_secret = secret)
get_token() # Testing token
rm(list=ls())     #clearing the R environment
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
library(httpuv)       # required for authentication
library(rtweet)       # loading rtweet library
library(ggplot2)      # plotting
library(dplyr)        # pipes
library(tidytext)     # text mining library
library(lubridate)
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
rm(list=ls())     #clearing the R environment
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
library(httpuv)       # required for authentication
library(rtweet)       # loading rtweet library
library(ggplot2)      # plotting
library(dplyr)        # pipes
library(tidytext)     # text mining library
library(lubridate)
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
?read_twitter_csv
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
read_twitter_csv('_raw_boi_main_timeline.csv')
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
read_twitter_csv('_raw_boi_main_timeline.csv')
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
aib_timeline <- read_twitter_csv('_raw_aib_main_timeline.csv')
tweets_aib <- tweets_to_aib_support
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
aib_timeline <- read_twitter_csv('_raw_aib_main_timeline.csv')
tweets_aib <- read_twitter_csv('_raw_tweets_to_aib_support.csv')
tweets_boi <- read_twitter_csv('_raw_tweets_to_boi_support.csv')
tweets_30day_aib <- tweets_to_aib %>%
filter(screen_name != 'AskAIB')
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
aib_timeline <- read_twitter_csv('_raw_aib_main_timeline.csv')
tweets_aib <- read_twitter_csv('_raw_tweets_to_aib_support.csv')
tweets_boi <- read_twitter_csv('_raw_tweets_to_boi_support.csv')
tweets_30day_aib <- read_twitter_csv('_raw_tweets_to_aib_main.csv') %>%
filter(screen_name != 'AskAIB')
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
boi_timeline <- read_twitter_csv('_raw_boi_main_timeline.csv')
aib_timeline <- read_twitter_csv('_raw_aib_main_timeline.csv')
tweets_aib <- read_twitter_csv('_raw_tweets_to_aib_support.csv')
tweets_boi <- read_twitter_csv('_raw_tweets_to_boi_support.csv')
tweets_30day_aib <- read_twitter_csv('_raw_tweets_to_aib.csv') %>%
filter(screen_name != 'AskAIB')
tweets_30day_boi <- read_twitter_csv('_raw_tweets_to_boi_main.csv') %>%
filter(screen_name != 'talktoBOI')
filter_date <- '2019-07-08'
# Cleaining up the text in the tweets
boi_timeline$text_clean = plain_tweets(gsub("\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)", "", boi_timeline$text))
aib_timeline$text_clean = plain_tweets(gsub("\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)", "", aib_timeline$text))
tweets_aib$text_clean = plain_tweets(gsub("\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)", "", tweets_aib$text))
tweets_boi$text_clean = plain_tweets(gsub("\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)", "", tweets_boi$text))
tweets_30day_aib$text_clean = plain_tweets(gsub("\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)", "", tweets_30day_aib$text))
tweets_30day_boi$text_clean = plain_tweets(gsub("\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)", "", tweets_30day_boi$text))
# ***************************************************
# Plotting AIB / BOI Output over a four month window
# ***************************************************
# Converting the date into weekly blocks
boi_timeline$date_week <- data.frame(as.Date(floor_date(boi_timeline$created_at, unit = "week")))
unique(boi_timeline$created_at)
boi_timeline$date_week <- data.frame(as.Date(floor_date(boi_timeline$created_at, unit = "week")))
floor_date(boi_timeline$created_at, unit = "week"))
floor_date(boi_timeline$created_at, unit = "week")
floor_date(boi_timeline$created_at, unit = 'week')
floor_date(boi_timeline$created_at, unit = 'week')
boi_timeline$created_at
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io/content/post/2020-12-30-twitter-sentiment-banks")
blogdown::build_site()
library(blogdown)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown::build_site()
blogdown::hugo_build()
setwd("C:/Users/Eoin/OneDrive/Data Science/Github/eoinlarkin.github.io")
blogdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())     #clearing the R environment
setwd("C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis")
library(httpuv)       # required for authentication
library(rtweet)       # loading rtweet library
library(ggplot2)      # plotting
library(dplyr)        # pipes
library(tidytext)     # text mining library
library(lubridate)
# -------------------------------
# Setting up twitter
# -------------------------------
appname <- "api_test_explore"      # name of twitter app
key <- "re6VqRcF0SmXDlxPR4I1xeWwg"     # twitter api key
secret <- "WddFVgjpGGUvErcRJGcbaAkRi1D0a7J5VhG5I2uIftO9FcG6lM"   # api secret key
access_tok <- "1125852423287922689-nQN6HOeTpgkFZHzFDc3qVF8kxEJqiw"
access_sec <- "tk1IjdZGaC1VIGhdCmMyZoEPGgi6QnfcEd40GYReG9nrX"
# create token named "twitter_token"
#token <- create_token(
#  app = appname,
#  consumer_key = key,
#  consumer_secret = secret)
get_token() # Testing token
?read_twitter_csv
path & '_raw_boi_main_timeline.csv'
path <- "C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis/"
path & '_raw_boi_main_timeline.csv'
boi_timeline <- read_twitter_csv(file.path(path, '_raw_boi_main_timeline.csv'))
path <- "C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis/"
path & '_raw_boi_main_timeline.csv'
path <- "C:/Users/Eoin/OneDrive/Data Science/Projects/Tweet Analysis/"
boi_timeline <- read_twitter_csv(file.path(path, '_raw_boi_main_timeline.csv'))
aib_timeline <- read_twitter_csv(file.path(path,'_raw_aib_main_timeline.csv'))
tweets_aib <- read_twitter_csv(file.path(path,'_raw_tweets_to_aib_support.csv'))
tweets_boi <- read_twitter_csv(file.path(path,'_raw_tweets_to_boi_support.csv'))
tweets_30day_aib <- read_twitter_csv(file.path(path,'_raw_tweets_to_aib.csv')) %>%
filter(screen_name != 'AskAIB')
tweets_30day_boi <- read_twitter_csv(file.path(path,'_raw_tweets_to_boi_main.csv')) %>%
filter(screen_name != 'talktoBOI')
filter_date <- '2019-07-08'
# Converting the date into weekly blocks
boi_timeline$date_week <- data.frame(as.Date(floor_date(boi_timeline$created_at, unit = "week")))
test <- floor_date(boi_timeline$created_at, unit = "week")
library(lubridate)
test <- floor_date(boi_timeline$created_at, unit = "week")
summary(boi_timeline$created_at)
test <- floor_date(as.Date(boi_timeline$created_at), unit = "week")
# Converting the date into weekly blocks
boi_timeline$date_week <- data.frame(floor_date(as.Date(boi_timeline$created_at), unit = "week"))
names(boi_timeline$date_week) = "date_week"
aib_timeline$date_week <- data.frame(floor_date(as.Date(aib_timeline$created_at, unit = "week")))
names(aib_timeline$date_week) = "date_week"
boi_by_week <- as_tibble(boi_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@bankofireland')
aib_by_week <- as_tibble(aib_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@aibireland')
# ***************************************************
# Plotting AIB / BOI Output over a four month window
# ***************************************************
ggplot(rbind(aib_by_week, boi_by_week), aes(x=date_week, y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d") +
ggtitle("Tweet Activity per Week") +
scale_fill_manual("Account", values = c("@aibireland" = "mediumpurple4", "@bankofireland" = "dodgerblue4")) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# Converting the date into weekly blocks
boi_timeline$date_week <- data.frame(floor_date(as.Date(boi_timeline$created_at), unit = "week"))
names(boi_timeline$date_week) = "date_week"
aib_timeline$date_week <- data.frame(floor_date(as.Date(aib_timeline$created_at, unit = "week")))
names(aib_timeline$date_week) = "date_week"
boi_by_week <- as_tibble(boi_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@bankofireland')
aib_by_week <- as_tibble(aib_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@aibireland')
summary(aib_by_week)
str(aib_by_week)
str(rbind(aib_by_week, boi_by_week))
ggplot(rbind(aib_by_week, boi_by_week), aes(x=date_week, y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d")
ggplot(rbind(aib_by_week, boi_by_week), aes(x=date_week, y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count")
ggplot(rbind(aib_by_week, boi_by_week), aes(x=as.Date(date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d")
# ***************************************************
# Plotting AIB / BOI Output over a four month window
# ***************************************************
ggplot(rbind(aib_by_week, boi_by_week), aes(x=as.Date(date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d") +
ggtitle("Tweet Activity per Week") +
scale_fill_manual("Account", values = c("@aibireland" = "mediumpurple4", "@bankofireland" = "dodgerblue4")) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# Saving output of ggplot
# ggsave("tweet_activity_per_week.png", width = 10, height = 6, units = "in", dpi=200)
# ***************************************************
# Plotting AIB / BOI Output over a four month window
# ***************************************************
ggplot(rbind(aib_by_week, boi_by_week), aes(x=as.Date(date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d") +
ggtitle("Tweet Activity per Week") +
scale_fill_manual("Account", values = c("@aibireland" = "mediumpurple4", "@bankofireland" = "dodgerblue4")) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# Saving output of ggplot
# ggsave("tweet_activity_per_week.png", width = 10, height = 6, units = "in", dpi=200)
boi_timeline$date_week
boi_by_week
# ***************************************************
# Plotting AIB / BOI Output over a four month window
# ***************************************************
ggplot(rbind(aib_by_week, boi_by_week), aes(x=as.Date(date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d") +
ggtitle("Tweet Activity per Week") +
scale_fill_manual("Account", values = c("@aibireland" = "mediumpurple4", "@bankofireland" = "dodgerblue4")) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# Saving output of ggplot
# ggsave("tweet_activity_per_week.png", width = 10, height = 6, units = "in", dpi=200)
ggplot(rbind(aib_by_week, boi_by_week), aes(x=as.Date(date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count")
ggplot(rbind(aib_by_week, boi_by_week), aes((date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count")
out <- rbind(aib_by_week, boi_by_week)
out
# Converting the date into weekly blocks
boi_timeline$date_week <- data.frame(floor_date(as.Date(boi_timeline$created_at), unit = "week"))
names(boi_timeline$date_week) = "date_week"
aib_timeline$date_week <- data.frame(floor_date(as.Date(aib_timeline$created_at, unit = "week")))
names(aib_timeline$date_week) = "date_week"
boi_by_week <- as_tibble(boi_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@bankofireland')
aib_by_week <- as_tibble(aib_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@aibireland')
boi_by_week
aib_by_week
aib_timeline$date_week
out
aib_by_week <- as_tibble(aib_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@aibireland')
View(aib_timeline$date_week)
# Converting the date into weekly blocks
boi_timeline$date_week <- data.frame(floor_date(as.Date(boi_timeline$created_at), unit = "week"))
names(boi_timeline$date_week) = "date_week"
aib_timeline$date_week <- data.frame(floor_date(as.Date(aib_timeline$created_at), unit = "week"))
names(aib_timeline$date_week) = "date_week"
boi_by_week <- as_tibble(boi_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@bankofireland')
aib_by_week <- as_tibble(aib_timeline$date_week) %>%
filter(date_week >= '2019-07-14' & date_week <= '2019-10-13') %>%
group_by(date_week) %>%
summarise(cnt = n()) %>%
mutate(account = '@aibireland')
# ***************************************************
# Plotting AIB / BOI Output over a four month window
# ***************************************************
ggplot(rbind(aib_by_week, boi_by_week), aes(x=as.Date(date_week), y=cnt, fill= account)) +
geom_bar(stat="identity", position="dodge", color='white')+
labs(x="Weekly Block", y="Tweet Count") +
scale_x_date(breaks = '1 weeks', date_labels = "%b-%d") +
ggtitle("Tweet Activity per Week") +
scale_fill_manual("Account", values = c("@aibireland" = "mediumpurple4", "@bankofireland" = "dodgerblue4")) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# Saving output of ggplot
# ggsave("tweet_activity_per_week.png", width = 10, height = 6, units = "in", dpi=200)
devtools::install_github("marcusvolz/strava")
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("marcusvolz/strava")
